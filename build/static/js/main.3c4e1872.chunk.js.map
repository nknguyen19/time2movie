{"version":3,"sources":["BaseUrl.js","components/SeachBar.js","components/TopBar.js","components/MovieSlider.js","components/MessageBox.js","components/Footer.js","components/Home.js","components/Signup.js","components/Signin.js","components/AddMovieForm.js","components/Admin.js","components/Comment.js","components/Comments.js","components/Movie.js","App.js","reportWebVitals.js","index.js","logo.svg"],"names":["BASE_URL","SearchBar","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","searchResult","setSearchResult","_useState5","_useState6","searchImages","setSearchImages","_useState7","_useState8","searchActive","setSearchActive","search","useNavigate","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","searchTerm","wrap","_context","prev","next","preventDefault","target","value","setTimeout","length","search_result","i","title","toLowerCase","includes","director","gerne","stars","join","push","sort","b","rating","slice","stop","_x","apply","this","arguments","parseSearchTerm","str","startIndex","index","result","lowerCaseStr","indexOf","react_default","createElement","substring","className","useEffect","_callee2","response","data","_context2","fetch","concat","sent","json","_callee3","images","movie_response","movie","_context3","console","log","results","poster_path","class","id","type","placeholder","onFocus","onBlur","onChange","style","display","map","key","_id","onClick","window","open","src","document","getElementById","dist_default","isReadOnly","unit","initialRating","size","innerHeight","TopBar","props","navigate","menu","setMenu","SeachBar","currentUser","image","name","aria-hidden","MovieSlider","movieList","setMovieList","hoverIndex","setHoverIndex","isDragging","setIsDragging","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","beforeChange","current","afterChange","settings","fetchrMovies","api_url","movie_list","userId","lib_default","transform","onMouseEnter","onMouseLeave","release","toUpperCase","overview","react_loading_default","color","MessageBox","messagePopup","setMessagePopup","content","messages","setMessages","addClientMessage","new_message","toConsumableArray","getBotReply","message","requestOptions","method","headers","Content-Type","body","JSON","stringify","script","async","appendChild","removeChild","getElementsByClassName","scrollTop","at","defer","dangerouslySetInnerHTML","__html","onKeyDown","focus","setSelectionRange","Footer","Home","setCurrentUser","defineProperty","movie_list_response","user_response","user","process","status","components_TopBar","components_MovieSlider","components_MessageBox","components_Footer","Signup","username","setUsername","password","setPassword","errorMessage","setErrorMessage","createUser","then","res","facebook_login_with_button_default","appId","autoLoad","fields","callback","info","email","avatar","picture","url","is_facebook_login","href","alt","Signin","naviagte","signin","AddMovieForm","setMovie","imageFile","setImageFile","objectSpread","episodes","country","starring","files","rows","description","FormData","append","axios","Admin","isAddingMovie","setIsAddingMovie","current_user","components_AddMovieForm","Comment","date","comment","removeComment","likes","setLikes","isLike","setIsLike","padTo2Digits","num","toString","padStart","getLikes","_ref2","likes_response","likes_list","find","like","userid","AddLike","_ref3","abrupt","commentid","RemoveLike","_ref4","Date","createdAt","getDate","getMonth","getFullYear","Comments","comments","setComments","getComments","comment_response","_comments","handleSubmit","_ref5","_callee4","_comment","_context4","movieid","components_Comment","Movie","useParams","setRating","fetchMovie","fetch_movie","movie_img_response","movie_img","ratings","fetchUser","fetchSimilarMovies","_callee5","review_response","_context5","_callee6","_context6","sharethis_reactjs_dist","config","alignment","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","top","location","parse","handleOnClick","star","reactions","spacing","components_Comments","App","Fragment","rel","charset","react_router_dom","react_router","path","element","components_Home","components_Signin","components_Signup","components_Admin","components_Movie","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.3c4e1872.chunk.js","sourcesContent":["const BASE_URL = process.env.NODE_ENV === \"development\" ? \"http://localhost:3001\" : \"https://sheltered-retreat-14346.herokuapp.com\";\n\nexport default BASE_URL;","import React, { useEffect, useState } from  'react'\nimport { useNavigate } from 'react-router-dom';\nimport StarRating from 'react-svg-star-rating';\nimport BASE_URL from '../BaseUrl';\nimport '../style/SearchBar.css';\n\nconst SearchBar = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchResult, setSearchResult] = useState([]);\n    const [searchImages, setSearchImages] = useState([]);\n    const [searchActive, setSearchActive] = useState(false);\n    const navigate = useNavigate();\n\n    const search = async (e) => {\n        e.preventDefault();\n        const searchTerm = e.target.value;\n        setTimeout(() => {\n            if (searchTerm === e.target.value) {\n                if (searchTerm.length > 0) {\n                    let search_result = [];\n                    for (let i = 0; i < movies.length; i++) {\n                        if (movies[i].title.toLowerCase().includes(searchTerm.toLowerCase()) || \n                            movies[i].director.toLowerCase().includes(searchTerm.toLowerCase()) || \n                            movies[i].gerne.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                            movies[i].stars.join(\" , \").includes(searchTerm.toLowerCase())) {\n                            search_result.push(movies[i]);\n                        }\n                    }\n                    search_result.sort((a,b) => {\n                        return (a.rating < b.rating) ? 1 : ((b.rating < a.rating) ? -1 : 0);\n                    });\n                    setSearchResult(search_result.slice(0, 10));\n                }\n                else {\n                    setSearchResult([]);\n                }\n            }\n            else return;\n        } , 500);\n    }\n\n    const parseSearchTerm = (searchTerm, str) => {\n        let startIndex = 0, index = 0;\n        let result = [];\n        searchTerm = searchTerm.toLowerCase();\n        const lowerCaseStr = str.toLowerCase();\n        while ((index = lowerCaseStr.indexOf(searchTerm, startIndex)) > -1) {\n            result.push(<p>{str.substring(0, index)}</p>);\n            result.push(<p className=\"match\">{str.substring(index, index + searchTerm.length)}</p>)\n            startIndex = index + searchTerm.length;\n        }\n        result.push(<p>{str.substring(startIndex)}</p>);\n        return result;\n    }\n\n    useEffect(async () => {\n        const response = await fetch(`${BASE_URL}/api/movie/getall`);\n        const data = await response.json();\n        setMovies(data);\n    }, [])\n\n    useEffect(async () => {\n        let images = [];\n        console.log(searchResult);\n        for (let i = 0; i < searchResult.length; ++i) {\n            const movie_response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=15d2ea6d0dc1d476efbca3eba2b9bbfb&query=${searchResult[i].title}`);\n            const movie = await movie_response.json();\n            images[i] = `http://image.tmdb.org/t/p/w500/${movie.results[0] ? movie.results[0].poster_path : `/default_movie_poster.jpg`}`;\n        }\n        setSearchImages(images);\n    }, [searchResult]);\n\n    return (\n        <div className=\"search-bar\">\n            <div className='input-search'>\n                <i class=\"fa fa-search\"></i>\n                <input id=\"search-input\" type=\"text\" placeholder=\"Search for a movie...\"\n                    onFocus={() => setSearchActive(true)}\n                    onBlur={(e) => {\n                        setTimeout(() => {\n                            setSearchActive(false);\n                        }, 500);\n                    }}\n                    onChange={search}\n                />\n            </div>\n            <div className='search-result' \n                style={{\n                    display: searchResult.length > 0 && searchActive ? 'block' : 'none'\n                }}>\n                {searchResult.length > 0 && searchActive ? \n                    searchResult.map((movie, index) => (\n                        <div className='search-result-item' key={movie._id}\n                            onClick={(e) => {\n                                window.open('/movie/' + movie._id, '_blank');\n                            }}>\n                            <div className='item-image'>\n                                <img src={searchImages[index]}/>\n                            </div>\n                            \n                            <div className='item-info'>\n                                <p>{parseSearchTerm(document.getElementById(\"search-input\").value, movie.title)}</p>\n                                <StarRating \n                                    isReadOnly\n                                    unit='float'\n                                    initialRating={movie.rating}\n                                    size={window.innerHeight * 0.02}\n                                    />\n                                <p>{parseSearchTerm(document.getElementById(\"search-input\").value, movie.gerne)}</p>\n                                <p>{parseSearchTerm(document.getElementById(\"search-input\").value, movie.director)}</p>\n                                <p>{parseSearchTerm(document.getElementById(\"search-input\").value, movie.stars.join(\" , \"))}</p>\n                            </div>\n                        </div>\n                    ))\n                :''}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SearchBar from \"./SeachBar\";\n\nconst TopBar = (props) => {\n    const navigate = useNavigate();\n    const [menu, setMenu] = useState(false);\n\n    return (\n        <div className=\"top-bar\">\n            <div className=\"logo\"\n                onClick={() => {navigate('/')}}>\n                Time2Movie\n            </div>\n            \n            <SearchBar />\n            \n            {props.currentUser ? \n            <div className=\"welcome\">\n                <img src={props.currentUser.image}/>\n                <div className=\"welcome-text\">\n                    <p>Welcome!  </p> \n                    <p>  {props.currentUser.name}</p>\n                </div>\n                {/* {props.currentUser.isAdmin ? \n                    <span onClick={() => navigate('/admin')}>Admin</span> \n                : ''} */}\n                <div className=\"user-menu\">\n                    <i class=\"fa fa-bars\" aria-hidden=\"true\" onClick={() => setMenu(!menu)}></i>\n                    <div className=\"menu\" style={{\n                        display: menu? 'block' : 'none'\n                    }}>\n                        <div className=\"logout\">\n                            <i class=\"fa fa-sign-out\"></i>\n                            <p>Sign out</p>\n                        </div>\n                        <div className=\"profile\">\n                            <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                            <p>Profile</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            :\n            <div className=\"auth\">\n                <button onClick={() => {navigate('/signup')}}>Sign up</button>\n                <button onClick={() => {navigate('/signin')}}>Sign in</button>\n            </div>\n}\n        </div>\n    )\n}\n\nexport default TopBar;","import React, {useState, useEffect} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Slider from 'react-slick';\nimport StarRating from 'react-svg-star-rating';\nimport ReactLoading from 'react-loading';\nimport BASE_URL from \"../BaseUrl\";\n\nconst MovieSlider = (props) => {\n    const [movieList, setMovieList] = useState([]);\n    const navigate = useNavigate();\n    const [hoverIndex, setHoverIndex] = useState(-1);\n    const [isDragging, setIsDragging] = useState(false);\n    const [settings, setSettings] = useState({\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 1,\n        autoplay: false,\n        autoplaySpeed: 3000,\n        beforeChange: (current, next) => {\n            setIsDragging(true);\n        },\n        afterChange: (current) => {\n            setIsDragging(false);\n        }\n    });\n\n    const fetchrMovies = async () => {\n        let api_url;\n        if (props.type === \"Similar to this movie\") {\n            api_url = `${BASE_URL}/api/movie/get-similar/${props.title}`;\n        }\n        else if (props.type === \"Trending now\") {\n            api_url = `${BASE_URL}/api/movie/get-trending`;\n        }\n        else if (props.type === \"Recommended for you\") {\n            api_url = `${BASE_URL}/api/movie/get-user-recommendation/${props.userId}`;\n        }\n        else {\n            api_url = `${BASE_URL}/api/movie/get`;\n        }\n        const response = await fetch(api_url);\n        console.log(response);\n        const movie_list = await response.json();\n        for (let i = 0; i < movie_list.length; ++i) {\n            const movie_response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=15d2ea6d0dc1d476efbca3eba2b9bbfb&query=${movie_list[i].title}`);\n            const movie = await movie_response.json();\n            movie_list[i].image = `http://image.tmdb.org/t/p/w500/${movie.results[0] ? movie.results[0].poster_path : `/default_movie_poster.jpg`}`;\n        }\n        setMovieList(movie_list);\n        console.log(movie_list);\n    }\n\n    console.log(movieList);\n\n    useEffect(async () => {\n        fetchrMovies();\n    }, [])\n\n    return(\n        <div className=\"movie-slider\">\n            <h2> {props.type} </h2>\n            {movieList.length > 0 ? <Slider {...settings}>\n                {movieList.map((movie, index) => (\n                    <div className=\"movie-item\"\n                        key={index}\n                        >\n                        <div className=\"movie-info\"\n                            onClick={(e) => !isDragging && navigate(`/movie/${movie._id}`)}\n                            style={{\n                                transform: hoverIndex === index ? 'translateY(-10px)' : 'none',\n                            }}\n                            onMouseEnter={(e) => setHoverIndex(index)}\n                            onMouseLeave={(e) => setHoverIndex(-1)}>\n                            <div className=\"movie-image\">\n                                <img src={movie.image}/>\n                            </div>\n\n                            <div className=\"rating\">\n                                <p>{movie.release}</p>\n                                <StarRating\n                                    isReadOnly\n                                    initialRating={movie.rating}\n                                    size={window.innerHeight * 0.03}\n                                    />\n                            </div>\n                            <span>{movie.title.toUpperCase()}</span>\n                            <div className=\"description\">\n                                <p>{movie.overview}</p>\n                            </div>\n                        </div>\n                    </div>\n                    ))}\n            </Slider> :\n            <div className=\"loading-movielist\">\n                <ReactLoading type=\"spin\" color='#3A3A3A'/>\n            </div>}\n        </div>\n    )\n}\n\nexport default MovieSlider","import React, { useEffect, useState } from 'react';\nimport BASE_URL from '../BaseUrl';\n\nconst MessageBox = () => {\n    const [ messagePopup , setMessagePopup ] = useState(false);\n    const [ messages, setMessages ] = useState([{type: 1, content: \"Hello! How can we help you?\"}]); //0: client, 1: server\n\n    const addClientMessage = (new_message) => {\n        if (new_message.length > 0) {\n            setMessages([...messages, {type: 0, content: new_message}]);\n        }\n    }\n\n    const addBotMessage = (new_message) => {\n        if (new_message.length > 0) {\n            setMessages([...messages, {type: 1, content: new_message}]);\n        }\n    }\n\n    const getBotReply = async (message) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                message: message\n            })\n        };\n        const response = await fetch(`${BASE_URL}/api/movie/bot-reply`, requestOptions);\n        const result = await response.json();\n        addBotMessage(result.message);\n    }\n\n    useEffect(() => {\n        const script = document.createElement('script');\n\n        script.src = \"https://apps.elfsight.com/p/platform.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        return () => {\n          document.body.removeChild(script);\n        }\n    }, []);\n\n    useEffect(() => {\n        document.getElementsByClassName('dummy')[0].scrollTop = 99999999;\n        if (messages.at(-1).type === 0) {\n            getBotReply(messages.at(-1).content);\n        }\n    }, [messages]);\n\n    return (\n        <div className=\"message-box\">\n\n            <script src=\"https://apps.elfsight.com/p/platform.js\" defer></script>\n            <div class=\"elfsight-app-05bc3da4-6fd8-406c-b8db-5b6f627ecd8b\"></div>\n            <div className='message-title'>\n                Time2Movie<i class={messagePopup ? \"fa fa-angle-down\" : \"fa fa-angle-up\"} \n                onClick={() => setMessagePopup(!messagePopup)}></i>\n            </div>\n            <div className='message-content'\n                style={{\n                    display: messagePopup ? \"block\" : \"none\"\n                }}>\n                <div className='messages'>\n                    <div className='dummy'>\n                        {messages.map(message => (\n                            <div className={`message ${message.type === 0 ? 'client' : 'server'}`}> \n                                {message.type === 0 ? <p>{message.content}</p>\n                                : <p dangerouslySetInnerHTML={{__html: message.content}}></p>}\n                            </div>\n                        ))}\n                    </div>\n                    \n                </div>\n                <div className='input'>\n                    <textarea id='input-text' placeholder='Aa' onKeyDown={(e) => {\n                        if (e.key === \"Enter\") {\n                            e.preventDefault();\n                            addClientMessage(e.target.value);\n                            e.target.value = '';\n                            e.target.focus();\n                            e.target.setSelectionRange(0, 0);\n                        }\n                    }}/>\n                    <button className='submit-message'\n                        onClick={(e) => {\n                            addClientMessage(document.getElementById('input-text').value);\n                            document.getElementById('input-text').value = '';\n                            document.getElementById('input-text').focus();\n                            document.getElementById('input-text').setSelectionRange(0, 0);\n                        }}>\n                        Send\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageBox;","import React from \"react\";\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"project-info\">\n                <h3>Time2Movie</h3>\n                <p>This is a project for course CS422</p>\n                <p>Movie data is from</p>\n            </div>\n            <div className=\"contact-info\">\n                <h3>Contact us</h3>\n                <p>Nguyen Khanh Nguyen: nknguyen19@apcs.fitus.edu.vn</p>\n                <p>Nguyen Thieu Khang: ntkhang19@apcs.fitus.edu.vn</p>\n                <p>Nguyen Quoc Khanh Tuyen: nqktuyen@apcs.fitus.edu.vn</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport TopBar from \"./TopBar\";\nimport Slider from 'react-slick';\nimport MovieSlider from \"./MovieSlider\";\nimport MessageBox from \"./MessageBox\";\nimport Footer from \"./Footer\";\nimport BASE_URL from \"../BaseUrl\";\n\nconst Home = () => {\n    const naviagate = useNavigate();\n    const [currentUser, setCurrentUser] = useState();\n    const [settings, setSettings] = useState({\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        dots: false\n      });\n    const [movieList, setMovieList] = useState([]);\n\n    useEffect(async () => {\n        console.log(BASE_URL, process.env.NODE_ENV);\n        const movie_list_response = await fetch(`${BASE_URL}/api/movie/get`);\n        let movie_list = await movie_list_response.json();\n        for (let i = 0; i < movie_list.length; ++i) {\n            const movie_response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=15d2ea6d0dc1d476efbca3eba2b9bbfb&query=${movie_list[i].title}`);\n            const movie = await movie_response.json();\n            movie_list[i].image = `http://image.tmdb.org/t/p/w500/${movie.results[0] ? movie.results[0].poster_path : `/default_movie_poster.jpg`}`;\n        }\n        setMovieList(movie_list);\n\n        const user_response = await fetch(`${BASE_URL}/api/user/get-current-user`);\n        if (user_response.status <= 200) {\n            const user = await user_response.json();\n            setCurrentUser(user);\n        }\n    }, [])\n    \n    return (\n        <div className=\"home\">\n            <TopBar currentUser={currentUser}/>\n            <div className=\"intro-slider\">\n                <Slider {...settings}>\n                    {movieList.map(movie => (\n                        <div className=\"movie-intro\">\n                            <div className=\"movie-title\">\n                                <h1>{movie.title}</h1>\n                                <p>{movie.overview}</p>\n                            </div>\n                            \n                            <div className=\"movie-image\">\n                                <img src={movie.image}/>\n                            </div>\n                            \n                        </div>\n                    ))}\n                </Slider>\n            </div>\n\n            <MovieSlider type=\"Trending now\" />\n\n            {currentUser ? <MovieSlider type=\"Recommended for you\" userId={currentUser._id}/> : ''}\n\n            <MessageBox />\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default Home;","import React, { useState } from \"react\";\nimport FacebookLogin from 'react-facebook-login';\nimport { useNavigate } from 'react-router-dom';\nimport BASE_URL from \"../BaseUrl\";\n\nconst Signup = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n\n    const createUser = () => {\n        if (username.length === 0 || password === 0) { // TODO: handle input error\n            return;\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                username: username,\n                password: password,\n            })\n        };\n        fetch(`${BASE_URL}/api/user/create`, requestOptions)\n            .then(res => res.json())\n            .then(res => {\n                if (res.message) {\n                    setErrorMessage(res.message);\n                }\n                else {\n                    document.getElementsByClassName('userid')[0].value = res._id;\n                    navigate('/');\n                }\n            });\n    }\n    \n    const loginFacebook = (info) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                username: info.email,\n                password: info.id,\n                name: info.name,\n                avatar: info.picture.data.url,\n                is_facebook_login: true,\n            })\n        };\n        fetch(`${BASE_URL}/api/user/login-facebook`, requestOptions)\n            .then(res => res.json())\n            .then(res => {\n                document.getElementsByClassName('userid')[0].value = res._id;\n                navigate('/');\n            });\n    }\n\n    return (\n        <div className=\"signup\">\n            <div className=\"signup-wrap\">\n                <div className=\"signup-form\">\n                    <h3>Sign up</h3>\n                    <p>Time2Movie is totally free to use. Sign up using your email address or phone number below to get started.</p>\n                    <span>{errorMessage}</span>\n                    <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)}/>\n                    <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\n                    <div className=\"signup-btn\" onClick={() => createUser}>\n                        Create account\n                    </div>\n                    <div className=\"or\"><hr/> Or <hr/></div>\n                    <FacebookLogin \n                        className=\"facebook-signup\"\n                        appId=\"466280858581721\"\n                        autoLoad={true}\n                        fields=\"name,email,picture\"\n                        callback={loginFacebook} />\n                    <p>Already have an account?<a href=\"/signin\">Sign in</a></p>\n                </div>\n                <img src=\"signup-background.jpg\" alt=\"image\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;","import React, {useState, useEffect} from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport { useNavigate } from 'react-router-dom';\nimport BASE_URL from '../BaseUrl';\n\nconst Signin = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const naviagte = useNavigate();\n\n    const signin = () => {\n        if (username.length === 0 || password === 0) { // TODO: handle input error\n            return;\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                username: username,\n                password: password,\n            })\n        };\n        fetch(`${BASE_URL}/api/user/signin`, requestOptions)\n            .then(res => res.json())\n            .then(res => {\n                if (res.message) {\n                    setErrorMessage(res.message);   \n                } \n                else {\n                    document.getElementsByClassName('userid')[0].value = res._id;\n                    naviagte(-1);\n                }\n            });\n    }\n\n    const loginFacebook = (info) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                username: info.email,\n                password: info.id,\n                name: info.name,\n                avatar: info.picture.data.url,\n                is_facebook_login: true,\n            })\n        };\n        fetch(`${BASE_URL}/api/user/login-facebook`, requestOptions)\n            .then(res => res.json())\n            .then(res => {\n                document.getElementsByClassName('userid')[0].value = res._id;\n                naviagte(-1);\n            });\n    }\n\n    return (\n        <div className=\"signin\">\n            <div className=\"signin-wrap\">\n                <div className=\"signin-form\">\n                    <h3>Welcome back to</h3>\n                    <p>Sign in using your account registered with Time2Movie</p>\n                    <span>{errorMessage}</span>\n                    <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)}/>\n                    <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\n                    <div className=\"signin-btn\" onClick={() => signin()}>\n                        Sign in\n                    </div>\n                    <div className=\"or\"><hr/> Or <hr/></div>\n                    <FacebookLogin \n                        className=\"facebook-signup\"\n                        appId=\"466280858581721\"\n                        // autoLoad={true}\n                        fields=\"name,email,picture\"\n                        callback={loginFacebook} />\n                    \n                    <p>Don't have an account? <a href=\"/signup\">Sign up</a></p>\n                </div>\n                <img src=\"signin-background.jpg\" alt=\"image\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Signin;","import { image } from \"image-downloader\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport BASE_URL from \"../BaseUrl\";\n\nconst AddMovieForm = () => {\n    const [ movie, setMovie ] = useState({})\n    const [ imageFile, setImageFile] = useState();\n\n    const createMovie = () => {\n        const data = new FormData();\n        data.append('file', imageFile);\n        data.append('movie', JSON.stringify(movie));\n        axios({\n            method: \"post\",\n            url: `${BASE_URL}/api/movie/create`,\n            data: data,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          });\n    }\n\n    return(\n        <div className=\"movie-form\">\n            <input type=\"text\" placeholder=\"Title\" onChange={(e) => setMovie({...movie, title: e.target.value.toLowerCase()})}/>\n            <input type=\"number\" placeholder=\"Episodes\" onChange={(e) => setMovie({...movie, episodes: e.target.value.toLowerCase()})}/>\n            <input type=\"date\" placeholder=\"Release Date\" onChange={(e) => setMovie({...movie, release: e.target.value.toLowerCase()})}/>\n            <input type=\"text\" placeholder=\"Country\" onChange={(e) => setMovie({...movie, country: e.target.value.toLowerCase()})}/>\n            <input type=\"text\" placeholder=\"Director\" onChange={(e) => setMovie({...movie, director: e.target.value.toLowerCase()})}/>\n            <input type=\"text\" placeholder=\"Starring\" onChange={(e) => setMovie({...movie, starring: e.target.value.toLowerCase()})}/>\n            <input type=\"file\" name=\"file\" onChange={(e) => setImageFile(e.target.files[0])}/>\n            <textarea name=\"description\" rows=\"5\" placeholder=\"description\" onChange={(e) => setMovie({...movie, description: e.target.value.toLowerCase()})}/>\n            <div onClick={createMovie}>Create</div>\n        </div>\n    )\n}\n\nexport default AddMovieForm;","import React , { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BASE_URL from '../BaseUrl';\nimport AddMovieForm from './AddMovieForm';\n\nconst Admin = () => {\n    const [ currentUser, setCurrentUser ] = useState();\n    const naviagte = useNavigate();\n    const [ isAddingMovie, setIsAddingMovie ] = useState(false);\n\n    useEffect(async () => {\n        const response = await fetch(`${BASE_URL}/api/user/get-current-user`);\n        if (response.status === 200) {\n            const current_user = await response.json();\n            setCurrentUser(current_user);\n        }\n        else {\n            naviagte('/signin');\n        }\n    }, [])\n\n    return (\n        <div className='home'>\n            <div className='home-intro'>\n                <div className=\"home-title\">\n                    Time2Movie\n                </div>\n                <div className=\"welcome\">\n                    <img src={currentUser && currentUser.image}/>\n                    <div>Welcome {currentUser && currentUser.name} !</div>\n                </div>\n                <div className='add-movie-btn'\n                    style={{ display: isAddingMovie ? 'none' : 'block' }}\n                    onClick={() => setIsAddingMovie(true)}>\n                    Add a movie\n                </div>\n                {isAddingMovie ? <AddMovieForm /> : ''}\n                <img src=\"background.png\" alt=\"image\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Admin;","import React, { useEffect, useState } from 'react';\nimport BASE_URL from '../BaseUrl';\nimport '../style/Comments.css';\n\nconst Comment = ({comment, removeComment, currentUser}) => {\n    const [ likes, setLikes ] = useState(0);\n    const [ isLike, setIsLike ] = useState(false);\n\n    const padTo2Digits = (num) => {\n        return num.toString().padStart(2, '0');\n    }\n\n    const formatDate = (date) => {\n        return [\n            padTo2Digits(date.getDate()),\n            padTo2Digits(date.getMonth() + 1),\n            date.getFullYear(),\n        ].join('/');\n    }\n\n    const getLikes = async () => {\n        const likes_response = await fetch(`${BASE_URL}/api/like/get/${comment._id}`);\n        const likes_list = await likes_response.json();\n        setLikes(likes_list.length);\n        if (likes_list.find(like => like.userid === comment.userid))\n            setIsLike(true);\n        else \n            setIsLike(false);\n    }\n\n    const AddLike = async () => {\n        if (!currentUser) {\n            return\n        }\n        const likes_response = await fetch(`${BASE_URL}/api/like/add`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                commentid: comment._id,\n                userid: currentUser._id,\n            })\n        });\n        getLikes();\n    }\n\n    const RemoveLike = async () => {\n        if (!currentUser) {\n            return\n        }\n        const likes_response = await fetch(`${BASE_URL}/api/like/remove`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                commentid: comment._id,\n                userid: currentUser._id,\n            })\n        });\n        getLikes();\n    }\n\n    useEffect(() => {\n        getLikes();\n    }, [])\n\n    return (\n        <div className=\"comment\">\n            <div className=\"comment-avatar\">\n                <img src={comment.avatar}/>\n            </div>\n            <div className='comment-text'>\n                <p className='name'>{comment.name}</p>\n                <p className='content'>\n                    {comment.content}\n                </p>\n                <div className='comment-info'>\n                    <div>\n                        <p>{likes}</p>\n                        <i class='fa fa-thumbs-up'/>\n                    </div>\n                    <div>\n                        <p className='like-button'\n                            onClick={() => {\n                                if (isLike)\n                                    RemoveLike();\n                                else\n                                    AddLike();\n                            }}>\n                                {isLike ? 'UnLike' : 'Like'}\n                        </p>\n                        <p className='like-button' onClick={() => {removeComment(comment)}}>Remove</p>\n                        <p className='date'>{formatDate(new Date(comment.createdAt))}</p>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Comment;","import React, { useEffect, useState } from 'react'\nimport BASE_URL from '../BaseUrl';\nimport '../style/Comments.css';\nimport Comment from './Comment';\n\nconst Comments = ({currentUser, movie}) => {\n    const [comments, setComments] = useState([]);\n\n    useEffect(async () => {\n        getComments();\n    }, [])\n\n    const getComments = async () => {\n        const comment_response = await fetch(`${BASE_URL}/api/comment/get/${movie._id}`);\n        const _comments = await comment_response.json();\n        setComments(_comments);\n    }\n\n    const removeComment = async (comment) => {\n        if (!currentUser) {\n            return\n        }\n        if (comment.userid !== currentUser._id) \n            return;\n        const response = await fetch(`${BASE_URL}/api/comment/remove`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: comment._id,\n            })\n        });\n        console.log('debug');\n        getComments();\n    }\n\n    const handleSubmit = async () => {\n        const comment_response = await fetch(`${BASE_URL}/api/comment/add`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                userid: currentUser._id,\n                movieid: movie._id,\n                content: document.getElementById('input-comment').value,\n            })\n        });\n        const _comment = await comment_response.json();\n        setComments([...comments, _comment]);\n        document.getElementById('input-comment').value = '';\n        getComments();\n    }\n\n    return (\n        <div className=\"comments\"> \n            <h2>Comments</h2>\n            \n            <div className=\"comments-list\">\n                {comments.map((comment, index) => \n                    <Comment comment={comment} \n                            removeComment={removeComment}\n                            currentUser={currentUser}\n                />)}\n            </div>\n            \n            {currentUser ?\n             <div className=\"add-comment\">\n                <img src={currentUser.image}/>\n                <input id='input-comment' type='text' placeholder='Add your comment here ...'/>\n                <button onClick={handleSubmit}>Send</button>\n            </div>\n            : ''}\n        </div>\n    )\n}\n\nexport default Comments;","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport '../style/Movie.css'\nimport TopBar from \"./TopBar\";\nimport StarRating from \"react-svg-star-rating\";\nimport Comments from \"./Comments\";\nimport {StickyShareButtons, InlineReactionButtons} from 'sharethis-reactjs';\nimport Footer from \"./Footer\";\nimport MovieSlider from \"./MovieSlider\";\nimport BASE_URL from \"../BaseUrl\";\n\nconst Movie = () => {\n    const { id } = useParams();\n    const [ movie, setMovie ] = useState(null);\n    const [ rating, setRating ] = useState(0);\n    const [ currentUser, setCurrentUser] = useState();\n    const [ similarMovies, setSimilarMovies ] = useState([]);\n\n    const fetchMovie = async () => {\n        const movie_response = await fetch(`${BASE_URL}/api/movie/get/${id}`);\n        if (movie_response.status <= 200) {\n            const fetch_movie = await movie_response.json();\n            setRating(fetch_movie.ratings);\n            console.log(fetch_movie);\n            const movie_img_response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=15d2ea6d0dc1d476efbca3eba2b9bbfb&query=${fetch_movie.title}`);\n            const movie_img = await movie_img_response.json();\n            setMovie({\n                ...fetch_movie,\n                image: `http://image.tmdb.org/t/p/w500/${movie_img.results[0] ? movie_img.results[0].poster_path : `/default_movie_poster.jpg`}`\n            });\n        }\n    }\n\n    const fetchUser = async () => {\n        const user_response = await fetch(`${BASE_URL}/api/user/get-current-user`);\n        if (user_response.status <= 200) {\n            const user = await user_response.json();\n            setCurrentUser(user);\n        }\n    }\n\n    const fetchSimilarMovies = async () => {\n        const response = await fetch(`${BASE_URL}/api/movie/get-similar/${movie.title}`);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    useEffect(async () => {\n        fetchMovie();\n        fetchUser();\n    }, []);\n\n    useEffect(async () => {\n        if (currentUser) {\n            const review_response = await fetch(`${BASE_URL}/api/review/get/${currentUser._id}/${id}`);\n            if (review_response.status <= 200) {\n                const result = await review_response.json();\n                setRating(result.ratings);\n            }\n        }\n    }, [currentUser]);\n    \n    useEffect(async () => {\n        if (movie) {\n            fetchSimilarMovies();\n        }\n    }, [movie])\n\n    const updateMovieRating = (star) => {\n        setRating(star);\n        if (currentUser && movie) {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ \n                    userid: currentUser._id,\n                    movieid: movie._id,\n                    ratings: star\n                })\n            };\n            fetch(`${BASE_URL}/api/review/create`, requestOptions)\n                .then(res => res.json())\n                .then(res => {\n                    if (res.message) {\n                    } \n                    else {\n                        fetchMovie();\n                    }\n                });\n        }\n    }\n\n    return movie ? (\n        <div className=\"movie\">\n            <TopBar currentUser={currentUser}/>\n            <StickyShareButtons\n                config={{\n                    alignment: 'left',    // alignment of buttons (left, right)\n                    color: 'social',      // set the color of buttons (social, white)\n                    enabled: true,        // show/hide buttons (true, false)\n                    font_size: 16,        // font size for the buttons\n                    hide_desktop: false,  // hide buttons on desktop (true, false)\n                    labels: 'counts',     // button labels (cta, counts, null)\n                    language: 'en',       // which language to use (see LANGUAGES)\n                    min_count: 0,         // hide react counts less than min_count (INTEGER)\n                    networks: [           // which networks to include (see SHARING NETWORKS)\n                    'linkedin',\n                    'facebook',\n                    'pinterest',\n                    'twitter',\n                    'messenger',\n                    ],\n                    padding: 12,          // padding within buttons (INTEGER)\n                    radius: 4,            // the corner radius on each button (INTEGER)\n                    show_total: true,     // show/hide the total share count (true, false)\n                    show_mobile: true,    // show/hide the buttons on mobile (true, false)\n                    show_toggle: true,    // show/hide the toggle buttons (true, false)\n                    size: 48,             // the size of each button (INTEGER)\n                    top: 160,             // offset in pixels from the top of the page\n        \n                    // OPTIONAL PARAMETERS\n                    url: window.location.href, // (defaults to current url)\n                    image: movie.image, // (defaults to og:image or twitter:image)\n                    description: 'Check',       // (defaults to og:description or twitter:description)\n                    title: 'custom title',            // (defaults to og:title or twitter:title)\n                }}\n                />\n            <div className=\"heading\">\n                <img src={movie.image}/>\n                <div className=\"info\">\n                    <h1>{movie.title.toUpperCase()}</h1>\n                    <h3>{(new Date(Date.parse(movie.release))).getFullYear()}</h3>\n                    <h3>Director: {movie.director}</h3>\n                    <h3>Starring: {movie.stars.join(\" , \")}</h3>\n                    {console.log(movie.stars)}\n                    <div className=\"avg-rating\">\n                        <h3>Community Rating</h3>\n                        <StarRating\n                            isReadOnly\n                            unit=\"float\"\n                            initialRating={movie.rating}\n                        />\n                    </div>\n\n                    <div className=\"user-rating\">\n                        <h3>Your Rating</h3>\n                        <StarRating\n                            unit=\"float\"\n                            handleOnClick={updateMovieRating}\n                            initialRating={rating}\n                        />\n                    </div>\n\n                    <InlineReactionButtons\n                    config={{\n                        alignment: 'left',  // alignment of buttons (left, center, right)\n                        enabled: true,        // show/hide buttons (true, false)\n                        language: 'en',       // which language to use (see LANGUAGES)\n                        min_count: 0,         // hide react counts less than min_count (INTEGER)\n                        padding: 12,          // padding within buttons (INTEGER)\n                        reactions: [          // which reactions to include (see REACTIONS)\n                        'slight_smile',\n                        'heart_eyes',\n                        'laughing',\n                        'astonished',\n                        'sob',\n                        'rage'\n                        ],\n                        size: 25,             // the size of each button (INTEGER)\n                        spacing: 5,           // the spacing between buttons (INTE\n                    }}\n                    />\n                </div>\n                \n            </div>\n            <p className=\"description\">{movie.overview}</p>\n\n            {movie ? <MovieSlider type=\"Similar to this movie\" title={movie.title}/> : ''}\n\n            <Comments currentUser={currentUser}\n                    movie={movie}/>\n\n            <Footer />\n        </div>\n    ) : (\n        <div></div>\n    )\n}\n\nexport default Movie;","/* eslint-disable react/jsx-no-duplicate-props */\nimport logo from './logo.svg';\nimport './style/App.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route}\n    from 'react-router-dom';\nimport Home from './components/Home';\nimport Signup from './components/Signup';\nimport Signin from './components/Signin';\nimport Admin from './components/Admin';\nimport Movie from './components/Movie';\n\n\nconst App = () => {\n  return (\n  <>\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      charset=\"UTF-8\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n    />\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n    <link href='https://fonts.googleapis.com/css?family=Poppins' rel='stylesheet'></link>\n    <Router>\n      <Routes>\n        <Route path='/' element={<Home />}/>\n        <Route path='/signin' element={<Signin/>} />\n        <Route path='/signup' element={<Signup/>} />\n        <Route path='/admin' element={<Admin/>} />\n        <Route path='/movie/:id' element={<Movie/>} />\n      </Routes>\n      <input className='userid' type=\"hidden\"/>\n    </Router>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}